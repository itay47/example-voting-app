pipeline {
  agent any

  environment {
    TF_IN_AUTOMATION = 'true'
    CLOUDSDK_CONFIG = "${env.WORKSPACE}"
    GOOGLE_APPLICATION_CREDENTIALS = credentials('gCloud_ServiceAccount')
    ARTIFACTORY_USERNAME = '' //credentials('nexus-creds[nexus_user]')
    ARTIFACTORY_PASSWORD = '' //credentials('nexus-creds[nexus_pass]')
  }
  
  stages {

    stage ('Set ENV'){
      steps{
        withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'nexus_pass', usernameVariable: 'nexus_user')]) {
          ARTIFACTORY_USERNAME = "${nexus_user}"
          ARTIFACTORY_PASSWORD = "${nexus_pass}"
        }
      }
    }

    stage ('Git Checkout') {
      steps {
        git "https://github.com/itay47/example-voting-app.git"
      }
    }
    
    stage('Terraform Init') {
      steps {
        dir('TF_GCP/Provision_GKE') {
          withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'nexus_pass', usernameVariable: 'nexus_user')]) {
            sh("gcloud auth activate-service-account  --key-file=${env.GOOGLE_APPLICATION_CREDENTIALS}")
            sh ("terraform init -input=false -reconfigure")
          }
        }
      }
    }
    
    stage('Terraform Plan') {
      steps {
          dir('TF_GCP/Provision_GKE') {
            sh("gcloud auth activate-service-account  --key-file=${env.GOOGLE_APPLICATION_CREDENTIALS}")
            sh ("terraform plan -out=tfplan -input=false -var-file=terraform.tfvars")
          }
        }
      }
    
    stage('Terraform Apply') {
      input {
        message "Deploy to GCP and create the GKE cluster?"
      }

      steps {
          dir('TF_GCP/Provision_GKE') {
            withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'nexus_pass', usernameVariable: 'nexus_user')]) {
              sh("gcloud auth activate-service-account  --key-file=${env.GOOGLE_APPLICATION_CREDENTIALS}")
              sh ("terraform apply -input=false tfplan")
            }
          }
      }
    }
  }
}