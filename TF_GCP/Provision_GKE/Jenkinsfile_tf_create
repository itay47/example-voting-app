pipeline {
  agent any
  
  environment {
    WORK_DIR = 'nothing'
  }
  
  stages {

    stage ('Git Checkout') {
      steps {
              git "https://github.com/itay47/example-voting-app.git"
            }
      }

    stage('itay test') {
      steps {
        sh ('${workspace}')
        dir('/TF_GCP/Provision_GKE/'){
          sh 'echo --- $(pwd)  ----'
        }
        
        sh ('echo ---> $WORK_DIR  <-----')
        sh '''
          #!/bin/bash
          echo "we are here: $(pwd)"
          cd /TF_GCP/Provision_GKE/
          ls
        '''
       }
    }
    
    stage('TF init & validate') {

      steps {
          
          sh '''
          echo "*** $WORK_DIR ***"
          if [ -d "$(pwd)/TF_GCP/Provision_GKE/" ]; then
            cd $(pwd)/TF_GCP/Provision_GKE/
            terraform init
            terraform validate
          else
            exit 1
            cd ../../
          fi'''
        }
    }

    stage('TF plan') {

      steps {

          sh '''
          if [ -d "$(pwd)/TF_GCP/Provision_GKE/" ]; then
            cd $(pwd)/TF_GCP/Provision_GKE
            terraform plan
          else
              exit 1
              cd ../../
          fi
          '''
        }
    }

    stage('TF Apply') {
      input {
        message "Deploy to GCP and create the GKE cluster?"
      }

      steps {
        container('terraform') {
          sh '''
          if [ -d "$(pwd)/TF_GCP/Provision_GKE/" ]; then
            cd $(pwd)/TF_GCP/Provision_GKE
            terraform apply -input=false -auto-approve
          else
            echo "*************** SKIPPING APPLY ******************"
            echo "Dployment of TF GKE was not approved!"
            echo "*************************************************"
          fi
          '''
        }
      }
      post{

        success{
          echo "====++++ GKE cluster created successfully ++++===="

        }
       failure{
           echo "====++++ GKE cluster create failed ++++===="
       }
     }
    }
  }
}
